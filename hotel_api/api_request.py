import json
import re
from typing import Dict, Optional

import requests
from telebot.types import InputMediaPhoto, Message

from loader import bot, headers


def request_to_api(url: str, headers: dict, querystring: dict) -> Optional[str]:
    """
    –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ —Å—Ç–∞—Ç—É—Å –∫–æ–¥–∞, –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞.
    :param url: —Å—Å—ã–ª–∫–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å.
    :param headers: –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞.
    :param querystring: –∑–∞–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏.
    :return: —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∑–∞–ø—Ä–æ—Å–∞, –≤ —Å–ª—É—á–∞–µ –Ω–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –æ—à–∏–±–∫–∏.
    """
    try:
        response = requests.request('GET', url=url, headers=headers, params=querystring, timeout=100)
        if response.status_code == requests.codes.ok:
            return response.text
    except Exception as exc:
        print('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {}'.format(exc))
        return None


def parse_destinations(city_name: str) -> Dict[str, str]:
    """
    –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä—Å–∏—Ç –∞–π–¥–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π –ø–æ –≥–æ—Ä–æ–¥—É, –∫–æ—Ç–æ—Ä—ã–π –≤–≤—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
    –î–æ–±–∞–≤–ª—è–µ—Ç –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Å–ª–æ–≤–∞—Ä—å destinations_ids.
    :param city_name: –≥–æ—Ä–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–≤—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ—Ç—É.
    :return destinations_ids: —Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞: –ù–æ–º–µ—Ä –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è".
    """
    url = 'https://hotels4.p.rapidapi.com/locations/v2/search'
    query = {'query': city_name, 'locate': 'en_EN', 'currency': 'USD'}
    response = request_to_api(url, headers, query)

    if response:
        result = json.loads(response)['suggestions'][0]['entities']
        if result:
            destinations_ids = dict()
            for i_item in result:
                if '<' in i_item.get('caption'):
                    formed_loc = re.sub(r'<.*?>+', '', i_item.get('caption'))
                    if (city_name.title() in formed_loc) or (city_name.lower() in formed_loc):
                        destinations_ids[formed_loc] = i_item.get('destinationId')
            return destinations_ids


def get_photo(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä—Å–∏—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –æ—Ç–µ–ª–µ–π. –î–∞–ª–µ–µ –¥–æ–±–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Å–ø–∏—Å–æ–∫
    —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –æ—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–π –ª–µ–∂–∏—Ç –≤–Ω—É—Ç—Ä–∏ data['list_of_hotels']
    :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ–Ω–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –≤–∑—è—Ç—å –µ–≥–æ id
    –∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ data['list_of_hotels'].
    """
    url = 'https://hotels4.p.rapidapi.com/properties/get-hotel-photos'

    with bot.retrieve_data(message.chat.id) as data:
        for hotel in data['list_of_hotels']:
            query = {'id': hotel}
            response_for_hotels_photo = request_to_api(url=url, headers=headers, querystring=query)
            if response_for_hotels_photo:
                result_of_photos = json.loads(response_for_hotels_photo)['roomImages'][0]['images'][0:data[
                    'photos_to_show']]

                for photo in result_of_photos:
                    photo_url = photo['baseUrl'].format(size="z")
                    data['list_of_hotels'][hotel]['photos'].append(photo_url)


def find_hotels_lowprice(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –æ—Ç–µ–ª–µ–π –ø–æ –Ω–∏–∑–∫–æ–π —Ü–µ–Ω–µ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å –∫ API –∏ –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
    –î–∞–ª–µ–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —ç—Ç–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ data['list_of_hotels'].
    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∂–µ–ª–∞–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –æ—Ç–µ–ª–µ–π, —Ç–æ –ø—Ä–æ—Å—Ç–æ
    –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º –æ—Ç–µ–ª–µ.
    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –æ—Ç–µ–ª–µ–π, —Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è get_photo.
    :param message: (Message) —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω—É–∂–Ω–æ –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –µ–≥–æ id, —á—Ç–æ–±—ã –≤–∑—è—Ç—å
    –æ—Ç—Ç—É–¥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞.
    """
    url_for_hotels_id_list = 'https://hotels4.p.rapidapi.com/properties/list'

    with bot.retrieve_data(message.chat.id) as data:
        user_destinationid = data['destinationID']
        user_show_photo = data['show_photo']
        user_total_hotels = data['hotels_to_show']
        user_arrival_date = data['arrival_date']
        user_departure_date = data['departure_date']

    query = {"destinationId": user_destinationid,
             "pageNumber": "1",
             "pageSize": user_total_hotels,
             "checkIn": user_arrival_date,
             "checkOut": user_departure_date,
             "adults1": "1",
             "sortOrder": "PRICE",
             "locale": "en_EN",
             "currency": "USD",
             }

    response_hotels_id_list = request_to_api(url=url_for_hotels_id_list, headers=headers, querystring=query)
    if response_hotels_id_list:
        result_for_hotels_id = json.loads(response_hotels_id_list)['data']['body']['searchResults']['results']
        if result_for_hotels_id:
            with bot.retrieve_data(message.chat.id) as data:
                data['list_of_hotels'] = {i.get('id'):
                                              {'hotel_name': i.get('name'),
                                               'hotel_address': i['address'].get('streetAddress'),
                                               "distance_from_center": i["landmarks"][0].get("distance"),
                                               "hotel_website": f"https://hotels.com/ho{i.get('id')}",
                                               'price_for_certain_period': int(re.sub(r'[^0-9]+', '',
                                                                                      i['ratePlan']['price'].get(
                                                                                          'current'))),
                                               "photos": []
                                               } for i in result_for_hotels_id
                                          }
                user_lowprice_hotels_list = data['list_of_hotels']
            if not user_show_photo:
                for hotel in user_lowprice_hotels_list:
                    bot.send_message(message.chat.id,
                                     f"üè® –û—Ç–µ–ª—å: {user_lowprice_hotels_list[hotel]['hotel_name']}\n"
                                     f"üîó –°—Å—ã–ª–∫–∞: {user_lowprice_hotels_list[hotel]['hotel_website']}\n"
                                     f"üó∫Ô∏è –ê–¥—Ä–µ—Å: {user_lowprice_hotels_list[hotel]['hotel_address']}\n"
                                     f"üìç –î–æ —Ü–µ–Ω—Ç—Ä–∞: {user_lowprice_hotels_list[hotel]['distance_from_center']}\n"
                                     f"üìÖ –ü–µ—Ä–∏–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è: —Å {user_arrival_date} –ø–æ {user_departure_date}\n"
                                     f"üíµ –¶–µ–Ω–∞: {user_lowprice_hotels_list[hotel]['price_for_certain_period']} $ (USD)",
                                     disable_web_page_preview=True
                                     )
            else:
                get_photo(message)
                with bot.retrieve_data(message.chat.id) as data:
                    for hotel in data['list_of_hotels']:
                        text = f"üè® –û—Ç–µ–ª—å: {data['list_of_hotels'][hotel]['hotel_name']}\n" \
                               f"üîó –°—Å—ã–ª–∫–∞: {data['list_of_hotels'][hotel]['hotel_website']}\n" \
                               f"üó∫Ô∏è –ê–¥—Ä–µ—Å: {data['list_of_hotels'][hotel]['hotel_address']}\n" \
                               f"üìç –î–æ —Ü–µ–Ω—Ç—Ä–∞: {data['list_of_hotels'][hotel]['distance_from_center']}\n" \
                               f"üìÖ –ü–µ—Ä–∏–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è: —Å {user_arrival_date} –ø–æ {user_departure_date}\n" \
                               f"üíµ –¶–µ–Ω–∞: {data['list_of_hotels'][hotel]['price_for_certain_period']} $ (USD)"

                        photos = [InputMediaPhoto(media=url, caption=text) if num == 0
                                  else InputMediaPhoto(media=url)
                                  for num, url in enumerate(data['list_of_hotels'][hotel]['photos'])]

                        bot.send_media_group(message.chat.id, photos)
        else:
            bot.send_message(message.chat.id, 'üò≠ –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')


def find_hotels_highprice(message: Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –æ—Ç–µ–ª–µ–π –ø–æ –≤—ã—Å–æ–∫–æ–π —Ü–µ–Ω–µ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å –∫ API –∏ –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
    –î–∞–ª–µ–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —ç—Ç–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ data['list_of_hotels'].
    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∂–µ–ª–∞–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –æ—Ç–µ–ª–µ–π, —Ç–æ –ø—Ä–æ—Å—Ç–æ
    –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º –æ—Ç–µ–ª–µ.
    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –æ—Ç–µ–ª–µ–π, —Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è get_photo.
    :param message: (Message) —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω—É–∂–Ω–æ –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –µ–≥–æ id, —á—Ç–æ–±—ã –≤–∑—è—Ç—å
    –æ—Ç—Ç—É–¥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞.
    """
    url_for_hotels_id_list = 'https://hotels4.p.rapidapi.com/properties/list'

    with bot.retrieve_data(message.chat.id) as data:
        print(data)
        user_destinationid_hp = data['destinationID']
        user_show_photo_hp = data['show_photo']
        user_total_hotels_hp = data['hotels_to_show']
        user_arrival_date_hp = data['arrival_date']
        user_departure_date_hp = data['departure_date']

    query_hp = {"destinationId": user_destinationid_hp,
                "pageNumber": "1",
                "pageSize": user_total_hotels_hp,
                "checkIn": user_arrival_date_hp,
                "checkOut": user_departure_date_hp,
                "adults1": "1",
                "sortOrder": "PRICE_HIGHEST_FIRST",
                "locale": "en_EN",
                "currency": "USD",
                }

    response_hotels_id_list = request_to_api(url=url_for_hotels_id_list, headers=headers, querystring=query_hp)
    if response_hotels_id_list:
        result_for_hotels_id = json.loads(response_hotels_id_list)['data']['body']['searchResults']['results']
        if result_for_hotels_id:
            print(result_for_hotels_id)
            with bot.retrieve_data(message.chat.id) as data:
                data['list_of_hotels'] = {i.get('id'):
                                              {'hotel_name': i.get('name'),
                                               'hotel_address': i['address'].get('streetAddress'),
                                               "distance_from_center": i["landmarks"][0].get("distance"),
                                               "hotel_website": f"https://hotels.com/ho{i.get('id')}",
                                               'price_for_certain_period': int(re.sub(r'[^0-9]+', '',
                                                                                      i['ratePlan']['price'].get(
                                                                                          'current'))),
                                               "photos": []
                                               } for i in result_for_hotels_id
                                          }
                user_highprice_hotels_list = data['list_of_hotels']
                print(len(user_highprice_hotels_list))
            if not user_show_photo_hp:
                for hotel in user_highprice_hotels_list:
                    bot.send_message(message.chat.id,
                                     f"üè® –û—Ç–µ–ª—å: {user_highprice_hotels_list[hotel]['hotel_name']}\n"
                                     f"üîó –°—Å—ã–ª–∫–∞: {user_highprice_hotels_list[hotel]['hotel_website']}\n"
                                     f"üó∫Ô∏è –ê–¥—Ä–µ—Å: {user_highprice_hotels_list[hotel]['hotel_address']}\n"
                                     f"üìç –î–æ —Ü–µ–Ω—Ç—Ä–∞: {user_highprice_hotels_list[hotel]['distance_from_center']}\n"
                                     f"üìÖ –ü–µ—Ä–∏–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è: —Å {user_arrival_date_hp} –ø–æ {user_departure_date_hp}\n"
                                     f"üíµ –¶–µ–Ω–∞: {user_highprice_hotels_list[hotel]['price_for_certain_period']} $ (USD)",
                                     disable_web_page_preview=True
                                     )
            else:
                get_photo(message)
                with bot.retrieve_data(message.chat.id) as data:
                    for hotel in data['list_of_hotels']:
                        text = f"üè® –û—Ç–µ–ª—å: {data['list_of_hotels'][hotel]['hotel_name']}\n" \
                               f"üîó –°—Å—ã–ª–∫–∞: {data['list_of_hotels'][hotel]['hotel_website']}\n" \
                               f"üó∫Ô∏è –ê–¥—Ä–µ—Å: {data['list_of_hotels'][hotel]['hotel_address']}\n" \
                               f"üìç –î–æ —Ü–µ–Ω—Ç—Ä–∞: {data['list_of_hotels'][hotel]['distance_from_center']}\n" \
                               f"üìÖ –ü–µ—Ä–∏–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è: —Å {user_arrival_date_hp} –ø–æ {user_departure_date_hp}\n" \
                               f"üíµ –¶–µ–Ω–∞: {data['list_of_hotels'][hotel]['price_for_certain_period']} $ (USD)"

                        photos = [InputMediaPhoto(media=url, caption=text) if num == 0
                                  else InputMediaPhoto(media=url) for num, url in enumerate(
                            data['list_of_hotels'][hotel]['photos']
                        )]

                        bot.send_media_group(message.chat.id, photos)
        else:
            bot.send_message(message.chat.id, 'üò≠ –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
